history: [u'1/1000.0', u'1/1000', u"man.loadModule('Debugger', None)", u"man.loadModule('Debugger')", u"man.loadModule('Debugger', None)", u"man.loadModule('Debugger')", u'man.listInterfaces().keys()', u'man.listInterfaces()', u"man.listInterfaces('cameraModule')", u"man.listInterfaces('module')", u"man.listInterfaces('Module')", u"ic = man.listInterfaces('Module')", u"ic = man.listInterfaces('module')", u'help(InterfaceCombo)', u'help)InterfaceCombo)', u'from lib.util.InterfaceCombo import InterfaceCombo', u'from lib.util.IterfaceCombo import InterfaceCombo', u"lib.Manager.Task.toposort({'a': ['b', 'c'], 'c': ['b', 'd'], 'e': ['b']}, cost={'a': 0, 'b': 0, 'c': 1, 'e': 1, 'd': 3})", u"lib.Manager.Task.toposort({'a': ['b', 'c'], 'c': ['b', 'd'], 'e': ['b']}, cost={'a': 0, 'b': 0, 'c': 1, 'd': 1, 'e': 3})", u"lib.Manager.Task.toposort({'a': ['b', 'c'], 'c': ['b', 'd'], 'e': ['b']})", u"lib.Manager.Task.toposort({'b': ['a'], 'c': ['a'], 'd': ['a']}, cost={'d': 1, 'c': 2})", u"lib.Manager.Task.toposort({'b': ['a'], 'c': ['a'], 'd': ['a']}, cost={'d': 1})", u"lib.Manager.Task.toposort({'b': ['a'], 'c': ['a'], 'd': ['a']}, cost={})", u"lib.Manager.Task.toposort({'b': 'a', 'c': 'a', 'd': 'a'}, cost={})", u"lib.Manager.Task.toposort(deps, cost={'l': 4, 'b': 1, 'i': 1, 'm': 2})", u"lib.Manager.Task.toposort(deps, cost={'l': 4, 'b': 1, 'i': 1})", u"lib.Manager.Task.toposort(deps, cost={'l': 4, 'b': 1})", u"lib.Manager.Task.toposort(deps, cost={'l': 4})", u"lib.Manager.Task.toposort(deps, cost={'f': 3, 'm': 4, 'j': 2, 'i': 10})", u"lib.Manager.Task.toposort(deps, cost={'f': 3, 'm': 4, 'j': 2, 'i': 5})", u"lib.Manager.Task.toposort(deps, cost={'f': 3, 'm': 4, 'j': 2})", u"lib.Manager.Task.toposort(deps, cost={'f': 3, 'm': 3, 'j': 2})", u"lib.Manager.Task.toposort(deps, cost={'f': 3, 'm': 1, 'j': 2})", u"lib.Manager.Task.toposort(deps, cost={'f': 3, 'j': 2})", u"lib.Manager.Task.toposort(deps, cost={'f': 1, 'j': 2})", u"deps['l']", u"lib.Manager.Task.toposort(deps, cost={'f': 1, 'j': 2})", u"lib.Manager.Task.toposort(deps, cost={'k': 1, 'f': 1, 'j': 2})", u"lib.Manager.Task.toposort(deps, cost={'k': 1, 'f': 1, 'j': })", u"lib.Manager.Task.toposort(deps, cost={'k': 1, 'f': 1})", u'import lib.Manager', u"lib.Manager.Task.toposort(deps, cost={'k': 1, 'f': 1})", u'from lib.Manager import Task', u"Task.toposort(deps, cost={'k': 1, 'f': 1})", u'deps', u"deps = {'l': ['j', 'e'], 'm': ['k'], 'j': ['g', 'h'], 'k': ['e', 'f'], 'i': ['b'], 'g': ['b'], 'h': ['b'], 'e': ['c'], 'f': ['d'], 'b': ['a'], 'c': ['a']}", u'Task.toposort(deps)', u'from lib.Manager import Task', u'Task.toposort(deps)', u'from lib.Manager import Task', u'Task.toposort(deps)', u"deps = {'l': ['j', 'e'], 'm': ['k'], 'j': ['g', 'h'], 'k': ['e', 'f'], 'i': ['b'], 'g': ['b'], 'h': ['b'], 'e': ['c'], 'f': ['d'], 'b': ['a'], 'c': ['a']}", u'from lib.Manager import Task', u'import lib.analysis.scripts.vcn_analysis as vcn', u'st.fisher_exact([[25,16], [2, 6]])', u'st.fisher_exact([[32,17], [2, 6]])', u'st.fisher_exact([[2, 5], [8, 1]])', u'st.fisher_exact([[5, 1], [2, 8]])', u'st.fisher_exact([[32, 2], [17, 6]])', u'st.fisher_exact([[1, 5], [2, 8]])', u'st.fisher_exact([[5, 1], [2, 8]])', u'st.fisher_exact([[1, 5], [8, 2]])', u'st.fisher_exact([[8, 2], [1, 5]])', u'help(st.fisher_exact)', u'import scipy.stats as st', u"cells[cells['MapOK']==1 & ((cells['CellType'] == 'S') |(cells['CellType'] == 'DS') |(cells['CellType'] == 'TS') |(cells['CellType'] == 'DS?') |(cells['CellType'] == 'TS?')) & (cells['SlicePlane'] != 'H')].size", u"cells[cells['MapOK']==1 & ((cells['CellType'] == 'B')) & (cells['SlicePlane'] != 'H')].size", u"cells[cells['MapOK']==1 & ((cells['CellType'] != 'U') & (cells['CellType'] != 'A')) & (cells['SlicePlane'] != 'H')].size", u"cells[cells['MapOK']==1]['CellType']", u"cells[cells['MapOK']==1 & ((cells['CellType'] == 'U') | (cells['CellType'] == 'A')) & (cells['SlicePlane'] != 'H')].size", u"cells[cells['MapOK']==1 & ((cells['CellType'] == 'U') | (cells['CellType'] == 'A'))].size", u"cells[cells['MapOK']==1 & ((cells['CellType'] == 'U') | (cells['CellType'] == 'A'))]", u"cells[cells['MapOK']==1 & (cells['CellType'] == 'U' | cells['CellType'] == 'A')]", u"cells[cells['MapOK']==1 & (cells['CellType'] == 'U' | cells['CelType'] == 'A')]", u"cells['MapOK']", u"cells['CellType']", u'cells.dtype', u"cells = db.select('DirTable_Cell', toArray=True)", u"db.select('DirTable_Cell')", u"db = man.getModule('Data Manager').currentDatabase()", u'db = man.currentDB', u'db = man.currentDb', u'db = man.currentDatabase', u"plt.setLabels(left=('ax', 'v'))", u'plt = pg.plot()', u'p3.plot(x=v, y=i/(v+90e-3), clear=True)', u'p3.plot(x=v, y=i/(v+90e-3))', u'v+90e-3', u'v', u'p3 = pg.plot(x=v, y=(v+90e-3)/i)', u'v,i = i,v', u"i = d['Channel':'command']['Time':0.01:0.05]", u"v = d['Channel':'primary']['Time':0.01:0.05]", u"v = d['Channel':'", u"p1.getAxis('left').setSize", u"p1.hideAxis('bottom')", u"p2.setLabels(left=('Membrane Potential', 'V'), bottom=('Time', 's'))", u"p1.setLabels(left=('Membrane Current', 'A'))", u"p1.setLabels(left='Membrane Current', 'A')"]
